#!/usr/bin/perl

use strict;
use warnings;
use FindBin;
use File::Spec;
use lib File::Spec->catdir("$FindBin::Bin/..", 'lib');
use Punc::Client;
use JSON;

my $target  = shift;
my $call    = shift;
my $module  = shift;
my $method  = shift;
my $options = get_options();

my $punc = Punc::Client->new($target);

my $res = $punc->$module->$method($options);

for (@$res) {
    if ( $method eq 'description' || $method eq 'desc' ) {
        print $_->{response}->{result};
    }
    else {
        print to_json($_) . "\n";
    }
}

exit;

sub get_options {
    my $options = {};
    while ($#ARGV >= 0 && $ARGV[0] =~ /^--?([^=-][^=]*)(=?)(.*)/) {
        my $var = $1;
        my $value = ($2 eq "") ? 1 : $3;
        $options->{$var} = $value;
        shift @ARGV;
    }
    return $options;
}
